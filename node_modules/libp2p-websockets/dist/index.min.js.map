{"version":3,"sources":["/Users/jacobheun/git/ipfs/js-libp2p-websockets/webpack/universalModuleDefinition","/Users/jacobheun/git/ipfs/js-libp2p-websockets/webpack/bootstrap","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/buffer/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/webpack/buildin/global.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/process/browser.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/multiaddr/src/protocols-table.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/varint/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/safe-buffer/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/iso-url/src/url-browser.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/multiaddr/src/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/bs58/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/class-is/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/src/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/pull-ws/client.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/pull-ws/web-socket.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/pull-ws/duplex.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/pull-ws/source.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/base64-js/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/ieee754/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/isarray/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/pull-ws/sink.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/timers-browserify/main.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/setimmediate/setImmediate.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/pull-ws/ready.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/pull-ws/ws-url.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/iso-url/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/iso-url/src/relative.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/mafmt/src/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/multiaddr/src/codec.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/multiaddr/src/convert.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/ip/lib/ip.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/os-browserify/browser.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/is-ip/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/ip-regex/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/base-x/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/varint/encode.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/varint/decode.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/varint/length.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/interface-connection/src/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/interface-connection/src/connection.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/pull-defer/duplex.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/pull-defer/source.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/pull-defer/sink.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/multiaddr-to-uri/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/debug/src/browser.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/debug/src/common.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/node_modules/ms/index.js","/Users/jacobheun/git/ipfs/js-libp2p-websockets/src/listener.browser.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","this","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","_typeof","iterator","constructor","g","Function","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","Protocols","proto","codes","names","resolvable","Boolean","lengthPrefixedVarSize","V","table","map","row","encode","decode","encodingLength","copyProps","SafeBuffer","_defineProperties","props","descriptor","writable","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","_setPrototypeOf","defaultBase","location","protocol","host","URL","URLWithLegacySupport","_URL","url","_this","base","instance","Constructor","_classCallCheck","path","pathname","search","auth","username","password","query","startsWith","protoProps","staticProps","subClass","superClass","_inherits","URLSearchParams","format","port","hostname","hash","codec","protocols","varint","bs58","withIs","NotImplemented","Multiaddr","addr","fromBuffer","charAt","protos","protoCodes","className","symbolName","bufferToString","toOptions","opts","split","family","transport","assign","sizeForAddr","protoNames","tuples","bufferToTuples","stringTuples","tuplesToStringTuples","encapsulate","decapsulate","getPeerId","b58str","filter","tuple","ipfs","nodeAddress","parts","address","fromNodeAddress","ip","isThinWaistAddress","fromStupidString","isName","isMultiaddr","some","resolve","callback","basex","_construct","Parent","Class","Reflect","construct","sham","Proxy","Date","isNativeReflectConstruct","_defineProperty","_ref","symbol","for","ClassIsWrapper","_Class","_class","_getPrototypeOf2","_this2","_len","_key","_ref2","withoutNew","_len2","_key2","connect","require","mafmt","Connection","toUri","log","debug","createListener","WebSockets","ma","options","socket","binary","onConnect","err","conn","getObservedAddrs","cb","close","handler","multiaddrs","matches","WebSocketsSecure","WebSocket","duplex","wsurl","isFunction","f","stream","remoteAddress","addEventListener","source","sink","ws","req","upgradeReq","binaryType","headers","upgrade","method","receiver","ended","started","evt","abort","shift","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","setImmediate","ready","closeOnEnd","onClose","next","readyState","ev","wasClean","event","send","scope","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","port2","createElement","documentElement","script","onreadystatechange","removeChild","appendChild","random","attachEvent","task","remove","removeEventListener","cleanup","handleOpen","handleErr","relative","http","https","_require","urlParsed","protocolMap","defaultProtocol","multiaddr","DNS4","DNS6","_DNS","or","IP","TCP","and","UDP","UTP","DNS","HTTP","HTTPS","WebRTCStar","WebSocketStar","WebRTCDirect","Reliable","_IPFS","_Circuit","Circuit","CircuitRecursive","IPFS","partialMatch","input","pnames","convert","stringToStringTuples","part","ParseError","stringTuplesToString","tup","protoFromTuple","stringTuplesToTuples","toBuffer","tuplesToBuffer","stringToBuffer","cleanPath","validateBuffer","isValidBuffer","isIp","Convert","ip2buf","ipString","ipBuff","buf2ip","buf2port","buf2str","buf2mh","str2buf","mh","os","buff","result","isV4Format","byte","isV6Format","sections","v4Buffer","splice","unshift","word","ipv4Regex","ipv6Regex","_normalizeFamily","test","fromPrefixLen","prefixlen","bits","mask","cidr","cidrString","cidrParts","subnet","networkAddress","toLong","maskBuffer","maskLength","octet","numberOfAddresses","fromLong","firstAddress","lastAddress","broadcastAddress","subnetMask","subnetMaskLength","numHosts","contains","other","cidrSubnet","not","isEqual","isPrivate","isPublic","isLoopback","loopback","all","interfaces","networkInterfaces","details","keys","nic","addresses","ipl","forEach","endianness","loadavg","uptime","freemem","MAX_VALUE","totalmem","cpus","release","navigator","appVersion","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","ipRegex","exact","v4","v6","v6seg","RegExp","ALPHABET","BASE_MAP","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","_i2","_it2","it","vch","pbegin","pend","b58","_i","_it","repeat","oldOffset","INT","MSB","MSBALL","counter","REST","N1","N2","N3","N4","N5","N6","N7","N8","N9","defer","info","peerInfo","setInnerConn","getPeerInfo","setPeerInfo","Source","Sink","_read","_cb","abortCb","_end","_","consume","_stream","reduceValue","v","Reducers","ip4","ip6","content","tcp","udp","dnsaddr","dns4","dns6","p2p","wss","p2p-websocket-star","p2p-webrtc-star","p2p-webrtc-direct","reduce","_console","console","formatArgs","useColors","namespace","humanize","diff","color","index","lastC","save","namespaces","storage","setItem","removeItem","error","load","getItem","DEBUG","__nwjs","userAgent","style","WebkitAppearance","firebug","exception","$1","localStorage","localstorage","colors","formatters","JSON","stringify","message","_toConsumableArray","arr2","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","selectColor","createDebug","prevTime","enabled","curr","ms","prev","coerce","formatter","destroy","extend","init","instances","delimiter","newDebug","toNamespace","regexp","substring","default","stack","disable","skips","enable","h","w","plural","msAbs","isPlural","round","exec","parseFloat","parse","long","fmtLong","fmtShort"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Libp2PWebsockets\"] = factory();\n\telse\n\t\troot[\"Libp2PWebsockets\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","\"use strict\";\n\n// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","'use strict';\n\nfunction Protocols(proto) {\n  if (typeof proto === 'number') {\n    if (Protocols.codes[proto]) {\n      return Protocols.codes[proto];\n    }\n\n    throw new Error('no protocol with code: ' + proto);\n  } else if (typeof proto === 'string' || proto instanceof String) {\n    if (Protocols.names[proto]) {\n      return Protocols.names[proto];\n    }\n\n    throw new Error('no protocol with name: ' + proto);\n  }\n\n  throw new Error('invalid protocol id type: ' + proto);\n}\n\nvar V = -1;\nProtocols.lengthPrefixedVarSize = V;\nProtocols.V = V;\nProtocols.table = [[4, 32, 'ip4'], [6, 16, 'tcp'], [273, 16, 'udp'], [33, 16, 'dccp'], [41, 128, 'ip6'], [54, V, 'dns4', 'resolvable'], [55, V, 'dns6', 'resolvable'], [56, V, 'dnsaddr', 'resolvable'], [132, 16, 'sctp'], // all of the below use varint for size\n[302, 0, 'utp'], // `p2p` is the preferred name for 421\n[421, Protocols.lengthPrefixedVarSize, 'p2p'], // `ipfs` has been added after `p2p` so that it is used by default.\n// The reason for this is to provide better backwards support for\n// code bases that do not yet support the `p2p` proto name. Eventually\n// `p2p` should become the default.\n[421, Protocols.lengthPrefixedVarSize, 'ipfs'], [480, 0, 'http'], [443, 0, 'https'], [460, 0, 'quic'], [477, 0, 'ws'], [478, 0, 'wss'], [479, 0, 'p2p-websocket-star'], [275, 0, 'p2p-webrtc-star'], [276, 0, 'p2p-webrtc-direct'], [290, 0, 'p2p-circuit']];\nProtocols.names = {};\nProtocols.codes = {}; // populate tables\n\nProtocols.table.map(function (row) {\n  var proto = p.apply(null, row);\n  Protocols.codes[proto.code] = proto;\n  Protocols.names[proto.name] = proto;\n});\nProtocols.object = p;\n\nfunction p(code, size, name, resolvable) {\n  return {\n    code: code,\n    size: size,\n    name: name,\n    resolvable: Boolean(resolvable)\n  };\n}\n\nmodule.exports = Protocols;","\"use strict\";\n\nmodule.exports = {\n  encode: require('./encode.js'),\n  decode: require('./decode.js'),\n  encodingLength: require('./length.js')\n};","\"use strict\";\n\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer');\n\nvar Buffer = buffer.Buffer; // alternative to using Object.keys for old browsers\n\nfunction copyProps(src, dst) {\n  for (var key in src) {\n    dst[key] = src[key];\n  }\n}\n\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer;\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports);\n  exports.Buffer = SafeBuffer;\n}\n\nfunction SafeBuffer(arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length);\n} // Copy static methods from Buffer\n\n\ncopyProps(Buffer, SafeBuffer);\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number');\n  }\n\n  return Buffer(arg, encodingOrOffset, length);\n};\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  var buf = Buffer(size);\n\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n  } else {\n    buf.fill(0);\n  }\n\n  return buf;\n};\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return Buffer(size);\n};\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return buffer.SlowBuffer(size);\n};","'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar defaultBase = self.location ? self.location.protocol + '//' + self.location.host : '';\nvar URL = self.URL;\n\nvar URLWithLegacySupport =\n/*#__PURE__*/\nfunction (_URL) {\n  _inherits(URLWithLegacySupport, _URL);\n\n  function URLWithLegacySupport(url) {\n    var _this;\n\n    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultBase;\n\n    _classCallCheck(this, URLWithLegacySupport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(URLWithLegacySupport).call(this, url, base));\n    _this.path = _this.pathname + _this.search;\n    _this.auth = _this.username && _this.password ? _this.username + ':' + _this.password : null;\n    _this.query = _this.search && _this.search.startsWith('?') ? _this.search.slice(1) : null;\n    return _this;\n  }\n\n  _createClass(URLWithLegacySupport, [{\n    key: \"format\",\n    value: function format() {\n      return this.toString();\n    }\n  }]);\n\n  return URLWithLegacySupport;\n}(URL);\n\nfunction format(obj) {\n  if (typeof obj === 'string') {\n    var url = new URL(obj);\n    return url.toString();\n  }\n\n  if (!(obj instanceof URL)) {\n    var auth = obj.username ? \"\".concat(obj.username, \":\").concat(obj.password, \"@\") : obj.auth + '@' || '';\n    var port = obj.port ? ':' + obj.port : '';\n    var protocol = obj.protocol ? obj.protocol + '//' : '';\n    var host = obj.host || '';\n    var hostname = obj.hostname || '';\n    var search = obj.search || (obj.query ? '?' + obj.query : '');\n    var hash = obj.hash || '';\n    var pathname = obj.pathname || '';\n    var path = obj.path || pathname + search;\n    return \"\".concat(protocol).concat(auth).concat(host || hostname + port).concat(path).concat(hash);\n  }\n}\n\nmodule.exports = {\n  URLWithLegacySupport: URLWithLegacySupport,\n  URLSearchParams: self.URLSearchParams,\n  defaultBase: defaultBase,\n  format: format\n};","'use strict';\n\nvar codec = require('./codec');\n\nvar protocols = require('./protocols-table');\n\nvar varint = require('varint');\n\nvar bs58 = require('bs58');\n\nvar withIs = require('class-is');\n\nvar NotImplemented = new Error('Sorry, Not Implemented Yet.');\n/**\n * Creates a [multiaddr](https://github.com/multiformats/multiaddr) from\n * a Buffer, String or another Multiaddr instance\n * public key.\n * @class Multiaddr\n * @param {(String|Buffer|Multiaddr)} addr - If String or Buffer, needs to adhere\n * to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n */\n\nvar Multiaddr = withIs.proto(function (addr) {\n  if (!(this instanceof Multiaddr)) {\n    return new Multiaddr(addr);\n  } // default\n\n\n  if (addr == null) {\n    addr = '';\n  }\n\n  if (addr instanceof Buffer) {\n    /**\n     * @type {Buffer} - The raw bytes representing this multiaddress\n     */\n    this.buffer = codec.fromBuffer(addr);\n  } else if (typeof addr === 'string' || addr instanceof String) {\n    if (addr.length > 0 && addr.charAt(0) !== '/') {\n      throw new Error(\"multiaddr \\\"\".concat(addr, \"\\\" must start with a \\\"/\\\"\"));\n    }\n\n    this.buffer = codec.fromString(addr);\n  } else if (addr.buffer && addr.protos && addr.protoCodes) {\n    // Multiaddr\n    this.buffer = codec.fromBuffer(addr.buffer); // validate + copy buffer\n  } else {\n    throw new Error('addr must be a string, Buffer, or another Multiaddr');\n  }\n}, {\n  className: 'Multiaddr',\n  symbolName: '@multiformats/js-multiaddr/multiaddr'\n});\n/**\n * Returns Multiaddr as a String\n *\n * @returns {String}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\n * // '/ip4/127.0.0.1/tcp/4001'\n */\n\nMultiaddr.prototype.toString = function toString() {\n  return codec.bufferToString(this.buffer);\n};\n/**\n * Returns Multiaddr as a convinient options object to be used with net.createConnection\n *\n * @returns {{family: String, host: String, transport: String, port: String}}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toOptions()\n * // { family: 'ipv4', host: '127.0.0.1', transport: 'tcp', port: '4001' }\n */\n\n\nMultiaddr.prototype.toOptions = function toOptions() {\n  var opts = {};\n  var parsed = this.toString().split('/');\n  opts.family = parsed[1] === 'ip4' ? 'ipv4' : 'ipv6';\n  opts.host = parsed[2];\n  opts.transport = parsed[3];\n  opts.port = parsed[4];\n  return opts;\n};\n/**\n * Returns Multiaddr as a human-readable string\n *\n * @returns {String}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').inspect()\n * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n */\n\n\nMultiaddr.prototype.inspect = function inspect() {\n  return '<Multiaddr ' + this.buffer.toString('hex') + ' - ' + codec.bufferToString(this.buffer) + '>';\n};\n/**\n * Returns the protocols the Multiaddr is defined with, as an array of objects, in\n * left-to-right order. Each object contains the protocol code, protocol name,\n * and the size of its address space in bits.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @returns {Array.<Object>} protocols - All the protocols the address is composed of\n * @returns {Number} protocols[].code\n * @returns {Number} protocols[].size\n * @returns {String} protocols[].name\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protos()\n * // [ { code: 4, size: 32, name: 'ip4' },\n * //   { code: 6, size: 16, name: 'tcp' } ]\n */\n\n\nMultiaddr.prototype.protos = function protos() {\n  return this.protoCodes().map(function (code) {\n    return Object.assign({}, protocols(code));\n  });\n};\n/**\n * Returns the codes of the protocols in left-to-right order.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @returns {Array.<Number>} protocol codes\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoCodes()\n * // [ 4, 6 ]\n */\n\n\nMultiaddr.prototype.protoCodes = function protoCodes() {\n  var codes = [];\n  var buf = this.buffer;\n  var i = 0;\n\n  while (i < buf.length) {\n    var code = varint.decode(buf, i);\n    var n = varint.decode.bytes;\n    var p = protocols(code);\n    var size = codec.sizeForAddr(p, buf.slice(i + n));\n    i += size + n;\n    codes.push(code);\n  }\n\n  return codes;\n};\n/**\n * Returns the names of the protocols in left-to-right order.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @return {Array.<String>} protocol names\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoNames()\n * // [ 'ip4', 'tcp' ]\n */\n\n\nMultiaddr.prototype.protoNames = function protoNames() {\n  return this.protos().map(function (proto) {\n    return proto.name;\n  });\n};\n/**\n * Returns a tuple of parts\n *\n * @return {Array.<Array>} tuples\n * @return {Number} tuples[].0 code of protocol\n * @return {Buffer} tuples[].1 contents of address\n * @example\n * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").tuples()\n * // [ [ 4, <Buffer 7f 00 00 01> ], [ 6, <Buffer 0f a1> ] ]\n */\n\n\nMultiaddr.prototype.tuples = function tuples() {\n  return codec.bufferToTuples(this.buffer);\n};\n/**\n * Returns a tuple of string/number parts\n *\n * @return {Array.<Array>} tuples\n * @return {Number} tuples[].0 code of protocol\n * @return {(String|Number)} tuples[].1 contents of address\n * @example\n * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").stringTuples()\n * // [ [ 4, '127.0.0.1' ], [ 6, 4001 ] ]\n */\n\n\nMultiaddr.prototype.stringTuples = function stringTuples() {\n  var t = codec.bufferToTuples(this.buffer);\n  return codec.tuplesToStringTuples(t);\n};\n/**\n * Encapsulates a Multiaddr in another Multiaddr\n *\n * @param {Multiaddr} addr - Multiaddr to add into this Multiaddr\n * @return {Multiaddr}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n *\n * mh3.toString()\n * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\n */\n\n\nMultiaddr.prototype.encapsulate = function encapsulate(addr) {\n  addr = Multiaddr(addr);\n  return Multiaddr(this.toString() + addr.toString());\n};\n/**\n * Decapsulates a Multiaddr from another Multiaddr\n *\n * @param {Multiaddr} addr - Multiaddr to remove from this Multiaddr\n * @return {Multiaddr}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n *\n * mh3.decapsulate(mh2).toString()\n * // '/ip4/8.8.8.8/tcp/1080'\n */\n\n\nMultiaddr.prototype.decapsulate = function decapsulate(addr) {\n  addr = addr.toString();\n  var s = this.toString();\n  var i = s.lastIndexOf(addr);\n\n  if (i < 0) {\n    throw new Error('Address ' + this + ' does not contain subaddress: ' + addr);\n  }\n\n  return Multiaddr(s.slice(0, i));\n};\n/**\n * Extract the peerId if the multiaddr contains one\n *\n * @return {String|null} peerId - The id of the peer or null if invalid or missing from the ma\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string>\n *\n * // should return QmValidBase58string or null if the id is missing or invalid\n * const peerId = mh1.getPeerId()\n */\n\n\nMultiaddr.prototype.getPeerId = function getPeerId() {\n  var b58str = null;\n\n  try {\n    b58str = this.stringTuples().filter(function (tuple) {\n      if (tuple[0] === protocols.names.ipfs.code) {\n        return true;\n      }\n    })[0][1];\n    bs58.decode(b58str);\n  } catch (e) {\n    b58str = null;\n  }\n\n  return b58str;\n};\n/**\n * Checks if two Multiaddrs are the same\n *\n * @param {Multiaddr} addr\n * @return {Bool}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * mh1.equals(mh1)\n * // true\n *\n * mh1.equals(mh2)\n * // false\n */\n\n\nMultiaddr.prototype.equals = function equals(addr) {\n  return this.buffer.equals(addr.buffer);\n};\n/**\n * Gets a Multiaddrs node-friendly address object. Note that protocol information\n * is left out: in Node (and most network systems) the protocol is unknowable\n * given only the address.\n *\n * Has to be a ThinWaist Address, otherwise throws error\n *\n * @returns {{family: String, address: String, port: String}}\n * @throws {Error} Throws error if Multiaddr is not a Thin Waist address\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').nodeAddress()\n * // {family: 'IPv4', address: '127.0.0.1', port: '4001'}\n */\n\n\nMultiaddr.prototype.nodeAddress = function nodeAddress() {\n  var codes = this.protoCodes();\n  var names = this.protoNames();\n  var parts = this.toString().split('/').slice(1);\n\n  if (parts.length < 4) {\n    throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}\".');\n  } else if (codes[0] !== 4 && codes[0] !== 41 && codes[0] !== 54 && codes[0] !== 55) {\n    throw new Error(\"no protocol with name: \\\"'\".concat(names[0], \"'\\\". Must have a valid family name: \\\"{ip4, ip6, dns4, dns6}\\\".\"));\n  } else if (parts[2] !== 'tcp' && parts[2] !== 'udp') {\n    throw new Error(\"no protocol with name: \\\"'\".concat(names[1], \"'\\\". Must have a valid transport protocol: \\\"{tcp, udp}\\\".\"));\n  }\n\n  return {\n    family: codes[0] === 41 || codes[0] === 55 ? 6 : 4,\n    address: parts[1],\n    // ip addr\n    port: parts[3] // tcp or udp port\n\n  };\n};\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @param {String} addr\n * @param {String} transport\n * @returns {Multiaddr} multiaddr\n * @throws {Error} Throws error if addr is not truthy\n * @throws {Error} Throws error if transport is not truthy\n * @example\n * Multiaddr.fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n */\n\n\nMultiaddr.fromNodeAddress = function fromNodeAddress(addr, transport) {\n  if (!addr) throw new Error('requires node address object');\n  if (!transport) throw new Error('requires transport protocol');\n  var ip = addr.family === 'IPv6' ? 'ip6' : 'ip4';\n  return Multiaddr('/' + [ip, addr.address, transport, addr.port].join('/'));\n}; // TODO find a better example, not sure about it's good enough\n\n/**\n * Returns if a Multiaddr is a Thin Waist address or not.\n *\n * Thin Waist is if a Multiaddr adheres to the standard combination of:\n *\n * `{IPv4, IPv6}/{TCP, UDP}`\n *\n * @param {Multiaddr} [addr] - Defaults to using `this` instance\n * @returns {Boolean} isThinWaistAddress\n * @example\n * const mh1 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n * const mh2 = Multiaddr('/ip4/192.168.2.1/tcp/5001')\n * // <Multiaddr 04c0a80201061389 - /ip4/192.168.2.1/tcp/5001>\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 047f000001060fa104c0a80201061389 - /ip4/127.0.0.1/tcp/4001/ip4/192.168.2.1/tcp/5001>\n * mh1.isThinWaistAddress()\n * // true\n * mh2.isThinWaistAddress()\n * // true\n * mh3.isThinWaistAddress()\n * // false\n */\n\n\nMultiaddr.prototype.isThinWaistAddress = function isThinWaistAddress(addr) {\n  var protos = (addr || this).protos();\n\n  if (protos.length !== 2) {\n    return false;\n  }\n\n  if (protos[0].code !== 4 && protos[0].code !== 41) {\n    return false;\n  }\n\n  if (protos[1].code !== 6 && protos[1].code !== 273) {\n    return false;\n  }\n\n  return true;\n}; // TODO rename this to something else than \"stupid string\"\n\n/**\n * Converts a \"stupid string\" into a Multiaddr.\n *\n * Stupid string format:\n * ```\n * <proto><IPv>://<IP Addr>[:<proto port>]\n * udp4://1.2.3.4:5678\n * ```\n *\n * @param {String} [str] - String in the \"stupid\" format\n * @throws {NotImplemented}\n * @returns {undefined}\n * @todo Not Implemented yet\n */\n\n\nMultiaddr.prototype.fromStupidString = function fromStupidString(str) {\n  throw NotImplemented;\n};\n/**\n * Object containing table, names and codes of all supported protocols.\n * To get the protocol values from a Multiaddr, you can use\n * [`.protos()`](#multiaddrprotos),\n * [`.protoCodes()`](#multiaddrprotocodes) or\n * [`.protoNames()`](#multiaddrprotonames)\n *\n * @instance\n * @returns {{table: Array, names: Object, codes: Object}}\n *\n */\n\n\nMultiaddr.protocols = protocols;\n/**\n * Returns if something is a Multiaddr that is a name\n *\n * @param {Multiaddr} addr\n * @return {Bool} isName\n */\n\nMultiaddr.isName = function isName(addr) {\n  if (!Multiaddr.isMultiaddr(addr)) {\n    return false;\n  } // if a part of the multiaddr is resolvable, then return true\n\n\n  return addr.protos().some(function (proto) {\n    return proto.resolvable;\n  });\n};\n/**\n * Returns an array of multiaddrs, by resolving the multiaddr that is a name\n *\n * @param {Multiaddr} addr\n *\n * @param {Function} callback\n * @return {Bool} isName\n */\n\n\nMultiaddr.resolve = function resolve(addr, callback) {\n  if (!Multiaddr.isMultiaddr(addr) || !Multiaddr.isName(addr)) {\n    return callback(new Error('not a valid name'));\n  }\n  /*\n   * Needs more consideration from spec design:\n   *   - what to return\n   *   - how to achieve it in the browser?\n   */\n\n\n  return callback(new Error('not implemented yet'));\n};\n\nexports = module.exports = Multiaddr;","\"use strict\";\n\nvar basex = require('base-x');\n\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nmodule.exports = basex(ALPHABET);","'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction withIs(Class, _ref) {\n  var className = _ref.className,\n      symbolName = _ref.symbolName;\n  var symbol = Symbol.for(symbolName);\n\n  var ClassIsWrapper = _defineProperty({}, className,\n  /*#__PURE__*/\n  function (_Class) {\n    _inherits(_class, _Class);\n\n    function _class() {\n      var _getPrototypeOf2;\n\n      var _this2;\n\n      _classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_class)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this2)), symbol, {\n        value: true\n      });\n      return _this2;\n    }\n\n    _createClass(_class, [{\n      key: Symbol.toStringTag,\n      get: function get() {\n        return className;\n      }\n    }]);\n\n    return _class;\n  }(Class))[className];\n\n  ClassIsWrapper[\"is\".concat(className)] = function (obj) {\n    return !!(obj && obj[symbol]);\n  };\n\n  return ClassIsWrapper;\n}\n\nfunction withIsProto(Class, _ref2) {\n  var className = _ref2.className,\n      symbolName = _ref2.symbolName,\n      withoutNew = _ref2.withoutNew;\n  var symbol = Symbol.for(symbolName);\n  /* eslint-disable object-shorthand */\n\n  var ClassIsWrapper = _defineProperty({}, className, function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (withoutNew && !(this instanceof ClassIsWrapper)) {\n      return _construct(ClassIsWrapper, args);\n    }\n\n    var _this = Class.call.apply(Class, [this].concat(args)) || this;\n\n    if (_this && !_this[symbol]) {\n      Object.defineProperty(_this, symbol, {\n        value: true\n      });\n    }\n\n    return _this;\n  })[className];\n  /* eslint-enable object-shorthand */\n\n\n  ClassIsWrapper.prototype = Object.create(Class.prototype);\n  ClassIsWrapper.prototype.constructor = ClassIsWrapper;\n  Object.defineProperty(ClassIsWrapper.prototype, Symbol.toStringTag, {\n    get: function get() {\n      return className;\n    }\n  });\n\n  ClassIsWrapper[\"is\".concat(className)] = function (obj) {\n    return !!(obj && obj[symbol]);\n  };\n\n  return ClassIsWrapper;\n}\n\nmodule.exports = withIs;\nmodule.exports.proto = withIsProto;","'use strict'\n\nconst connect = require('pull-ws/client')\nconst mafmt = require('mafmt')\nconst withIs = require('class-is')\nconst Connection = require('interface-connection').Connection\n\nconst toUri = require('multiaddr-to-uri')\nconst debug = require('debug')\nconst log = debug('libp2p:websockets:dialer')\n\nconst createListener = require('./listener')\n\nclass WebSockets {\n  dial (ma, options, callback) {\n    if (typeof options === 'function') {\n      callback = options\n      options = {}\n    }\n\n    callback = callback || function () { }\n\n    const url = toUri(ma)\n    log('dialing %s', url)\n    const socket = connect(url, {\n      binary: true,\n      onConnect: (err) => {\n        callback(err)\n      }\n    })\n\n    const conn = new Connection(socket)\n    conn.getObservedAddrs = (cb) => cb(null, [ma])\n    conn.close = (cb) => socket.close(cb)\n\n    return conn\n  }\n\n  createListener (options, handler) {\n    if (typeof options === 'function') {\n      handler = options\n      options = {}\n    }\n\n    return createListener(options, handler)\n  }\n\n  filter (multiaddrs) {\n    if (!Array.isArray(multiaddrs)) {\n      multiaddrs = [multiaddrs]\n    }\n\n    return multiaddrs.filter((ma) => {\n      if (ma.protoNames().includes('p2p-circuit')) {\n        return false\n      }\n\n      if (ma.protoNames().includes('ipfs')) {\n        ma = ma.decapsulate('ipfs')\n      }\n\n      return mafmt.WebSockets.matches(ma) ||\n        mafmt.WebSocketsSecure.matches(ma)\n    })\n  }\n}\n\nmodule.exports = withIs(WebSockets, { className: 'WebSockets', symbolName: '@libp2p/js-libp2p-websockets/websockets' })\n","'use strict'; //load websocket library if we are not in the browser\n\nvar WebSocket = require('./web-socket');\n\nvar duplex = require('./duplex');\n\nvar wsurl = require('./ws-url');\n\nfunction isFunction(f) {\n  return 'function' === typeof f;\n}\n\nmodule.exports = function (addr, opts) {\n  if (isFunction(opts)) opts = {\n    onConnect: opts\n  };\n  var location = typeof window === 'undefined' ? {} : window.location;\n  var url = wsurl(addr, location);\n  var socket = new WebSocket(url);\n  var stream = duplex(socket, opts);\n  stream.remoteAddress = url;\n\n  stream.close = function (cb) {\n    if (isFunction(cb)) {\n      socket.addEventListener('close', cb);\n    }\n\n    socket.close();\n  };\n\n  socket.addEventListener('open', function (e) {\n    if (opts && isFunction(opts.onConnect)) {\n      opts.onConnect(null, stream);\n    }\n  });\n  return stream;\n};\n\nmodule.exports.connect = module.exports;","\"use strict\";\n\nmodule.exports = 'undefined' === typeof WebSocket ? require('ws') : WebSocket;","\"use strict\";\n\nvar source = require('./source');\n\nvar sink = require('./sink');\n\nmodule.exports = duplex;\n\nfunction duplex(ws, opts) {\n  var req = ws.upgradeReq || {};\n  if (opts && opts.binaryType) ws.binaryType = opts.binaryType;else if (opts && opts.binary) ws.binaryType = 'arraybuffer';\n  return {\n    source: source(ws, opts && opts.onConnect),\n    sink: sink(ws, opts),\n    //http properties - useful for routing or auth.\n    headers: req.headers,\n    url: req.url,\n    upgrade: req.upgrade,\n    method: req.method\n  };\n}\n\n;","\"use strict\";\n\n/**\n  ### `source(socket)`\n\n  Create a pull-stream `Source` that will read data from the `socket`.\n\n  <<< examples/read.js\n\n**/\nvar Buffer = require('safe-buffer').Buffer; // copied from github.com/feross/buffer\n// Some ArrayBuffers are not passing the instanceof check, so we need to do a bit more work :(\n\n\nfunction isArrayBuffer(obj) {\n  return obj instanceof ArrayBuffer || obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' && typeof obj.byteLength === 'number';\n}\n\nmodule.exports = function (socket, cb) {\n  var buffer = [];\n  var receiver;\n  var ended;\n  var started = false;\n  socket.addEventListener('message', function (evt) {\n    var data = evt.data;\n\n    if (isArrayBuffer(data)) {\n      data = Buffer.from(data);\n    }\n\n    if (receiver) {\n      return receiver(null, data);\n    }\n\n    buffer.push(data);\n  });\n  socket.addEventListener('close', function (evt) {\n    if (ended) return;\n\n    if (receiver) {\n      receiver(ended = true);\n    }\n  });\n  socket.addEventListener('error', function (evt) {\n    if (ended) return;\n    ended = evt;\n\n    if (!started) {\n      started = true;\n      cb && cb(evt);\n    }\n\n    if (receiver) {\n      receiver(ended);\n    }\n  });\n  socket.addEventListener('open', function (evt) {\n    if (started || ended) return;\n    started = true;\n  });\n\n  function read(abort, cb) {\n    receiver = null; //if stream has already ended.\n\n    if (ended) return cb(ended); // if ended, abort\n    else if (abort) {\n        //this will callback when socket closes\n        receiver = cb;\n        socket.close();\n      } // return data, if any\n      else if (buffer.length > 0) cb(null, buffer.shift()); // wait for more data (or end)\n        else receiver = cb;\n  }\n\n  ;\n  return read;\n};","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n\n  for (var i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","\"use strict\";\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","\"use strict\";\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","\"use strict\";\n\nvar ready = require('./ready');\n/**\n  ### `sink(socket, opts?)`\n\n  Create a pull-stream `Sink` that will write data to the `socket`.\n\n  <<< examples/write.js\n\n**/\n\n\nvar nextTick = typeof setImmediate !== 'undefined' ? setImmediate : process.nextTick;\n\nmodule.exports = function (socket, opts) {\n  return function (read) {\n    opts = opts || {};\n    var closeOnEnd = opts.closeOnEnd !== false;\n    var onClose = 'function' === typeof opts ? opts : opts.onClose;\n\n    function next(end, data) {\n      // if the stream has ended, simply return\n      if (end) {\n        if (closeOnEnd && socket.readyState <= 1) {\n          if (onClose) socket.addEventListener('close', function (ev) {\n            if (ev.wasClean || ev.code === 1006) onClose();else {\n              var err = new Error('ws error');\n              err.event = ev;\n              onClose(err);\n            }\n          });\n          socket.close();\n        }\n\n        return;\n      } // socket ready?\n\n\n      ready(socket, function (end) {\n        if (end) {\n          return read(end, function () {});\n        }\n\n        socket.send(data);\n        nextTick(function () {\n          read(null, next);\n        });\n      });\n    }\n\n    read(null, next);\n  };\n};","\"use strict\";\n\nvar scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply; // DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\n\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\n\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\n\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n}; // Does not start the time, just sets up the members needed.\n\n\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n}; // setimmediate attaches itself to the global object\n\n\nrequire(\"setimmediate\"); // On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\n\n\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || void 0 && (void 0).setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || void 0 && (void 0).clearImmediate;","\"use strict\";\n\n(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1; // Spec says greater than zero\n\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n\n  function setImmediate(callback) {\n    // Callback can either be a function or a string\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    } // Copy function arguments\n\n\n    var args = new Array(arguments.length - 1);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    } // Store and register the task\n\n\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n\n      case 1:\n        callback(args[0]);\n        break;\n\n      case 2:\n        callback(args[0], args[1]);\n        break;\n\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function installNextTickImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function onGlobalMessage(event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    registerImmediate = function registerImmediate(handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    registerImmediate = function registerImmediate(handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    registerImmediate = function registerImmediate(handle) {\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6–8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? void 0 : global : self);","\"use strict\";\n\nmodule.exports = function (socket, callback) {\n  var remove = socket && (socket.removeEventListener || socket.removeListener);\n\n  function cleanup() {\n    if (typeof remove == 'function') {\n      remove.call(socket, 'open', handleOpen);\n      remove.call(socket, 'error', handleErr);\n    }\n  }\n\n  function handleOpen(evt) {\n    cleanup();\n    callback();\n  }\n\n  function handleErr(evt) {\n    cleanup();\n    callback(evt);\n  } // if the socket is closing or closed, return end\n\n\n  if (socket.readyState >= 2) {\n    return callback(true);\n  } // if open, trigger the callback\n\n\n  if (socket.readyState === 1) {\n    return callback();\n  }\n\n  socket.addEventListener('open', handleOpen);\n  socket.addEventListener('error', handleErr);\n};","\"use strict\";\n\nvar _require = require('iso-url'),\n    relative = _require.relative;\n\nvar map = {\n  http: 'ws',\n  https: 'wss'\n};\nvar def = 'ws';\n\nmodule.exports = function (url, location) {\n  return relative(url, location, map, def);\n};","'use strict';\n\nvar _require = require('./src/url'),\n    URLWithLegacySupport = _require.URLWithLegacySupport,\n    format = _require.format,\n    URLSearchParams = _require.URLSearchParams,\n    defaultBase = _require.defaultBase;\n\nvar relative = require('./src/relative');\n\nmodule.exports = {\n  URL: URLWithLegacySupport,\n  URLSearchParams: URLSearchParams,\n  format: format,\n  relative: relative,\n  defaultBase: defaultBase\n};","'use strict';\n\nvar _require = require('./url'),\n    URLWithLegacySupport = _require.URLWithLegacySupport,\n    format = _require.format;\n\nmodule.exports = function (url) {\n  var location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var protocolMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var defaultProtocol = arguments.length > 3 ? arguments[3] : undefined;\n  var protocol = location.protocol ? location.protocol.replace(':', '') : 'http'; // Check protocol map\n\n  protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':';\n  var urlParsed;\n\n  try {\n    urlParsed = new URLWithLegacySupport(url);\n  } catch (err) {\n    urlParsed = {};\n  }\n\n  var base = Object.assign({}, location, {\n    protocol: protocol || urlParsed.protocol,\n    host: location.host || urlParsed.host\n  });\n  return new URLWithLegacySupport(url, format(base)).toString();\n};","'use strict';\n\nvar multiaddr = require('multiaddr');\n/*\n * Valid combinations\n */\n\n\nvar DNS4 = base('dns4');\nvar DNS6 = base('dns6');\n\nvar _DNS = or(base('dnsaddr'), DNS4, DNS6);\n\nvar IP = or(base('ip4'), base('ip6'));\nvar TCP = or(and(IP, base('tcp')), and(_DNS, base('tcp')));\nvar UDP = and(IP, base('udp'));\nvar UTP = and(UDP, base('utp'));\nvar DNS = or(and(_DNS, base('tcp')), _DNS);\nvar WebSockets = or(and(TCP, base('ws')), and(DNS, base('ws')));\nvar WebSocketsSecure = or(and(TCP, base('wss')), and(DNS, base('wss')));\nvar HTTP = or(and(TCP, base('http')), and(IP, base('http')), and(DNS, base('http')), and(DNS));\nvar HTTPS = or(and(TCP, base('https')), and(IP, base('https')), and(DNS, base('https')));\nvar WebRTCStar = or(and(WebSockets, base('p2p-webrtc-star'), base('ipfs')), and(WebSocketsSecure, base('p2p-webrtc-star'), base('ipfs')));\nvar WebSocketStar = or(and(WebSockets, base('p2p-websocket-star'), base('ipfs')), and(WebSocketsSecure, base('p2p-websocket-star'), base('ipfs')), and(WebSockets, base('p2p-websocket-star')), and(WebSocketsSecure, base('p2p-websocket-star')));\nvar WebRTCDirect = or(and(HTTP, base('p2p-webrtc-direct')), and(HTTPS, base('p2p-webrtc-direct')));\nvar Reliable = or(WebSockets, WebSocketsSecure, HTTP, HTTPS, WebRTCStar, WebRTCDirect, TCP, UTP);\n\nvar _IPFS = or(and(Reliable, base('ipfs')), WebRTCStar, base('ipfs'));\n\nvar _Circuit = or(and(_IPFS, base('p2p-circuit'), _IPFS), and(_IPFS, base('p2p-circuit')), and(base('p2p-circuit'), _IPFS), and(Reliable, base('p2p-circuit')), and(base('p2p-circuit'), Reliable), base('p2p-circuit'));\n\nvar CircuitRecursive = function CircuitRecursive() {\n  return or(and(_Circuit, CircuitRecursive), _Circuit);\n};\n\nvar Circuit = CircuitRecursive();\nvar IPFS = or(and(Circuit, _IPFS, Circuit), and(_IPFS, Circuit), and(Circuit, _IPFS), Circuit, _IPFS);\nexports.DNS = DNS;\nexports.DNS4 = DNS4;\nexports.DNS6 = DNS6;\nexports.IP = IP;\nexports.TCP = TCP;\nexports.UDP = UDP;\nexports.UTP = UTP;\nexports.HTTP = HTTP;\nexports.HTTPS = HTTPS;\nexports.WebSockets = WebSockets;\nexports.WebSocketsSecure = WebSocketsSecure;\nexports.WebSocketStar = WebSocketStar;\nexports.WebRTCStar = WebRTCStar;\nexports.WebRTCDirect = WebRTCDirect;\nexports.Reliable = Reliable;\nexports.Circuit = Circuit;\nexports.IPFS = IPFS;\n/*\n * Validation funcs\n */\n\nfunction and() {\n  var args = Array.from(arguments);\n\n  function matches(a) {\n    if (typeof a === 'string') {\n      a = multiaddr(a);\n    }\n\n    var out = partialMatch(a.protoNames());\n\n    if (out === null) {\n      return false;\n    }\n\n    return out.length === 0;\n  }\n\n  function partialMatch(a) {\n    if (a.length < args.length) {\n      return null;\n    }\n\n    args.some(function (arg) {\n      a = typeof arg === 'function' ? arg().partialMatch(a) : arg.partialMatch(a);\n\n      if (a === null) {\n        return true;\n      }\n    });\n    return a;\n  }\n\n  return {\n    toString: function toString() {\n      return '{ ' + args.join(' ') + ' }';\n    },\n    input: args,\n    matches: matches,\n    partialMatch: partialMatch\n  };\n}\n\nfunction or() {\n  var args = Array.from(arguments);\n\n  function matches(a) {\n    if (typeof a === 'string') {\n      a = multiaddr(a);\n    }\n\n    var out = partialMatch(a.protoNames());\n\n    if (out === null) {\n      return false;\n    }\n\n    return out.length === 0;\n  }\n\n  function partialMatch(a) {\n    var out = null;\n    args.some(function (arg) {\n      var res = typeof arg === 'function' ? arg().partialMatch(a) : arg.partialMatch(a);\n\n      if (res) {\n        out = res;\n        return true;\n      }\n    });\n    return out;\n  }\n\n  var result = {\n    toString: function toString() {\n      return '{ ' + args.join(' ') + ' }';\n    },\n    input: args,\n    matches: matches,\n    partialMatch: partialMatch\n  };\n  return result;\n}\n\nfunction base(n) {\n  var name = n;\n\n  function matches(a) {\n    if (typeof a === 'string') {\n      a = multiaddr(a);\n    }\n\n    var pnames = a.protoNames();\n\n    if (pnames.length === 1 && pnames[0] === name) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function partialMatch(protos) {\n    if (protos.length === 0) {\n      return null;\n    }\n\n    if (protos[0] === name) {\n      return protos.slice(1);\n    }\n\n    return null;\n  }\n\n  return {\n    toString: function toString() {\n      return name;\n    },\n    matches: matches,\n    partialMatch: partialMatch\n  };\n}","'use strict';\n\nvar convert = require('./convert');\n\nvar protocols = require('./protocols-table');\n\nvar varint = require('varint'); // export codec\n\n\nmodule.exports = {\n  stringToStringTuples: stringToStringTuples,\n  stringTuplesToString: stringTuplesToString,\n  tuplesToStringTuples: tuplesToStringTuples,\n  stringTuplesToTuples: stringTuplesToTuples,\n  bufferToTuples: bufferToTuples,\n  tuplesToBuffer: tuplesToBuffer,\n  bufferToString: bufferToString,\n  stringToBuffer: stringToBuffer,\n  fromString: fromString,\n  fromBuffer: fromBuffer,\n  validateBuffer: validateBuffer,\n  isValidBuffer: isValidBuffer,\n  cleanPath: cleanPath,\n  ParseError: ParseError,\n  protoFromTuple: protoFromTuple,\n  sizeForAddr: sizeForAddr // string -> [[str name, str addr]... ]\n\n};\n\nfunction stringToStringTuples(str) {\n  var tuples = [];\n  var parts = str.split('/').slice(1); // skip first empty elem\n\n  if (parts.length === 1 && parts[0] === '') {\n    return [];\n  }\n\n  for (var p = 0; p < parts.length; p++) {\n    var part = parts[p];\n    var proto = protocols(part);\n\n    if (proto.size === 0) {\n      tuples.push([part]);\n      continue;\n    }\n\n    p++; // advance addr part\n\n    if (p >= parts.length) {\n      throw ParseError('invalid address: ' + str);\n    }\n\n    tuples.push([part, parts[p]]);\n  }\n\n  return tuples;\n} // [[str name, str addr]... ] -> string\n\n\nfunction stringTuplesToString(tuples) {\n  var parts = [];\n  tuples.map(function (tup) {\n    var proto = protoFromTuple(tup);\n    parts.push(proto.name);\n\n    if (tup.length > 1) {\n      parts.push(tup[1]);\n    }\n  });\n  return '/' + parts.join('/');\n} // [[str name, str addr]... ] -> [[int code, Buffer]... ]\n\n\nfunction stringTuplesToTuples(tuples) {\n  return tuples.map(function (tup) {\n    if (!Array.isArray(tup)) {\n      tup = [tup];\n    }\n\n    var proto = protoFromTuple(tup);\n\n    if (tup.length > 1) {\n      return [proto.code, convert.toBuffer(proto.code, tup[1])];\n    }\n\n    return [proto.code];\n  });\n} // [[int code, Buffer]... ] -> [[str name, str addr]... ]\n\n\nfunction tuplesToStringTuples(tuples) {\n  return tuples.map(function (tup) {\n    var proto = protoFromTuple(tup);\n\n    if (tup.length > 1) {\n      return [proto.code, convert.toString(proto.code, tup[1])];\n    }\n\n    return [proto.code];\n  });\n} // [[int code, Buffer ]... ] -> Buffer\n\n\nfunction tuplesToBuffer(tuples) {\n  return fromBuffer(Buffer.concat(tuples.map(function (tup) {\n    var proto = protoFromTuple(tup);\n    var buf = Buffer.from(varint.encode(proto.code));\n\n    if (tup.length > 1) {\n      buf = Buffer.concat([buf, tup[1]]); // add address buffer\n    }\n\n    return buf;\n  })));\n}\n\nfunction sizeForAddr(p, addr) {\n  if (p.size > 0) {\n    return p.size / 8;\n  } else if (p.size === 0) {\n    return 0;\n  } else {\n    var size = varint.decode(addr);\n    return size + varint.decode.bytes;\n  }\n} // Buffer -> [[int code, Buffer ]... ]\n\n\nfunction bufferToTuples(buf) {\n  var tuples = [];\n  var i = 0;\n\n  while (i < buf.length) {\n    var code = varint.decode(buf, i);\n    var n = varint.decode.bytes;\n    var p = protocols(code);\n    var size = sizeForAddr(p, buf.slice(i + n));\n\n    if (size === 0) {\n      tuples.push([code]);\n      i += n;\n      continue;\n    }\n\n    var addr = buf.slice(i + n, i + n + size);\n    i += size + n;\n\n    if (i > buf.length) {\n      // did not end _exactly_ at buffer.length\n      throw ParseError('Invalid address buffer: ' + buf.toString('hex'));\n    } // ok, tuple seems good.\n\n\n    tuples.push([code, addr]);\n  }\n\n  return tuples;\n} // Buffer -> String\n\n\nfunction bufferToString(buf) {\n  var a = bufferToTuples(buf);\n  var b = tuplesToStringTuples(a);\n  return stringTuplesToString(b);\n} // String -> Buffer\n\n\nfunction stringToBuffer(str) {\n  str = cleanPath(str);\n  var a = stringToStringTuples(str);\n  var b = stringTuplesToTuples(a);\n  return tuplesToBuffer(b);\n} // String -> Buffer\n\n\nfunction fromString(str) {\n  return stringToBuffer(str);\n} // Buffer -> Buffer\n\n\nfunction fromBuffer(buf) {\n  var err = validateBuffer(buf);\n  if (err) throw err;\n  return Buffer.from(buf); // copy\n}\n\nfunction validateBuffer(buf) {\n  try {\n    bufferToTuples(buf); // try to parse. will throw if breaks\n  } catch (err) {\n    return err;\n  }\n}\n\nfunction isValidBuffer(buf) {\n  return validateBuffer(buf) === undefined;\n}\n\nfunction cleanPath(str) {\n  return '/' + str.trim().split('/').filter(function (a) {\n    return a;\n  }).join('/');\n}\n\nfunction ParseError(str) {\n  return new Error('Error parsing address: ' + str);\n}\n\nfunction protoFromTuple(tup) {\n  var proto = protocols(tup[0]);\n  return proto;\n}","'use strict';\n\nvar ip = require('ip');\n\nvar isIp = require('is-ip');\n\nvar protocols = require('./protocols-table');\n\nvar bs58 = require('bs58');\n\nvar varint = require('varint');\n\nmodule.exports = Convert; // converts (serializes) addresses\n\nfunction Convert(proto, a) {\n  if (a instanceof Buffer) {\n    return Convert.toString(proto, a);\n  } else {\n    return Convert.toBuffer(proto, a);\n  }\n}\n\nConvert.toString = function convertToString(proto, buf) {\n  proto = protocols(proto);\n\n  switch (proto.code) {\n    case 4: // ipv4\n\n    case 41:\n      // ipv6\n      return buf2ip(buf);\n\n    case 6: // tcp\n\n    case 273: // udp\n\n    case 33: // dccp\n\n    case 132:\n      // sctp\n      return buf2port(buf);\n\n    case 54: // dns4\n\n    case 55: // dns6\n\n    case 56:\n      // dnsaddr\n      return buf2str(buf);\n\n    case 421:\n      // ipfs\n      return buf2mh(buf);\n\n    default:\n      return buf.toString('hex');\n    // no clue. convert to hex\n  }\n};\n\nConvert.toBuffer = function convertToBuffer(proto, str) {\n  proto = protocols(proto);\n\n  switch (proto.code) {\n    case 4:\n      // ipv4\n      return ip2buf(str);\n\n    case 41:\n      // ipv6\n      return ip2buf(str);\n\n    case 6: // tcp\n\n    case 273: // udp\n\n    case 33: // dccp\n\n    case 132:\n      // sctp\n      return port2buf(parseInt(str, 10));\n\n    case 54: // dns4\n\n    case 55: // dns6\n\n    case 56:\n      // dnsaddr\n      return str2buf(str);\n\n    case 421:\n      // ipfs\n      return mh2buf(str);\n\n    default:\n      return Buffer.from(str, 'hex');\n    // no clue. convert from hex\n  }\n};\n\nfunction ip2buf(ipString) {\n  if (!isIp(ipString)) {\n    throw new Error('invalid ip address');\n  }\n\n  return ip.toBuffer(ipString);\n}\n\nfunction buf2ip(ipBuff) {\n  var ipString = ip.toString(ipBuff);\n\n  if (!isIp(ipString)) {\n    throw new Error('invalid ip address');\n  }\n\n  return ipString;\n}\n\nfunction port2buf(port) {\n  var buf = Buffer.alloc(2);\n  buf.writeUInt16BE(port, 0);\n  return buf;\n}\n\nfunction buf2port(buf) {\n  return buf.readUInt16BE(0);\n}\n\nfunction str2buf(str) {\n  var buf = Buffer.from(str);\n  var size = Buffer.from(varint.encode(buf.length));\n  return Buffer.concat([size, buf]);\n}\n\nfunction buf2str(buf) {\n  var size = varint.decode(buf);\n  buf = buf.slice(varint.decode.bytes);\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths');\n  }\n\n  return buf.toString();\n}\n\nfunction mh2buf(hash) {\n  // the address is a varint prefixed multihash string representation\n  var mh = Buffer.from(bs58.decode(hash));\n  var size = Buffer.from(varint.encode(mh.length));\n  return Buffer.concat([size, mh]);\n}\n\nfunction buf2mh(buf) {\n  var size = varint.decode(buf);\n  var address = buf.slice(varint.decode.bytes);\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths');\n  }\n\n  return bs58.encode(address);\n}","'use strict';\n\nvar ip = exports;\n\nvar Buffer = require('buffer').Buffer;\n\nvar os = require('os');\n\nip.toBuffer = function (ip, buff, offset) {\n  offset = ~~offset;\n  var result;\n\n  if (this.isV4Format(ip)) {\n    result = buff || new Buffer(offset + 4);\n    ip.split(/\\./g).map(function (byte) {\n      result[offset++] = parseInt(byte, 10) & 0xff;\n    });\n  } else if (this.isV6Format(ip)) {\n    var sections = ip.split(':', 8);\n    var i;\n\n    for (i = 0; i < sections.length; i++) {\n      var isv4 = this.isV4Format(sections[i]);\n      var v4Buffer;\n\n      if (isv4) {\n        v4Buffer = this.toBuffer(sections[i]);\n        sections[i] = v4Buffer.slice(0, 2).toString('hex');\n      }\n\n      if (v4Buffer && ++i < 8) {\n        sections.splice(i, 0, v4Buffer.slice(2, 4).toString('hex'));\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) {\n        sections.unshift('0');\n      }\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) {\n        sections.push('0');\n      }\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++) {\n        ;\n      }\n\n      var argv = [i, 1];\n\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0');\n      }\n\n      sections.splice.apply(sections, argv);\n    }\n\n    result = buff || new Buffer(offset + 16);\n\n    for (i = 0; i < sections.length; i++) {\n      var word = parseInt(sections[i], 16);\n      result[offset++] = word >> 8 & 0xff;\n      result[offset++] = word & 0xff;\n    }\n  }\n\n  if (!result) {\n    throw Error('Invalid ip address: ' + ip);\n  }\n\n  return result;\n};\n\nip.toString = function (buff, offset, length) {\n  offset = ~~offset;\n  length = length || buff.length - offset;\n  var result = [];\n\n  if (length === 4) {\n    // IPv4\n    for (var i = 0; i < length; i++) {\n      result.push(buff[offset + i]);\n    }\n\n    result = result.join('.');\n  } else if (length === 16) {\n    // IPv6\n    for (var i = 0; i < length; i += 2) {\n      result.push(buff.readUInt16BE(offset + i).toString(16));\n    }\n\n    result = result.join(':');\n    result = result.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3');\n    result = result.replace(/:{3,4}/, '::');\n  }\n\n  return result;\n};\n\nvar ipv4Regex = /^(\\d{1,3}\\.){3,3}\\d{1,3}$/;\nvar ipv6Regex = /^(::)?(((\\d{1,3}\\.){3}(\\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i;\n\nip.isV4Format = function (ip) {\n  return ipv4Regex.test(ip);\n};\n\nip.isV6Format = function (ip) {\n  return ipv6Regex.test(ip);\n};\n\nfunction _normalizeFamily(family) {\n  return family ? family.toLowerCase() : 'ipv4';\n}\n\nip.fromPrefixLen = function (prefixlen, family) {\n  if (prefixlen > 32) {\n    family = 'ipv6';\n  } else {\n    family = _normalizeFamily(family);\n  }\n\n  var len = 4;\n\n  if (family === 'ipv6') {\n    len = 16;\n  }\n\n  var buff = new Buffer(len);\n\n  for (var i = 0, n = buff.length; i < n; ++i) {\n    var bits = 8;\n\n    if (prefixlen < 8) {\n      bits = prefixlen;\n    }\n\n    prefixlen -= bits;\n    buff[i] = ~(0xff >> bits) & 0xff;\n  }\n\n  return ip.toString(buff);\n};\n\nip.mask = function (addr, mask) {\n  addr = ip.toBuffer(addr);\n  mask = ip.toBuffer(mask);\n  var result = new Buffer(Math.max(addr.length, mask.length));\n  var i = 0; // Same protocol - do bitwise and\n\n  if (addr.length === mask.length) {\n    for (i = 0; i < addr.length; i++) {\n      result[i] = addr[i] & mask[i];\n    }\n  } else if (mask.length === 4) {\n    // IPv6 address and IPv4 mask\n    // (Mask low bits)\n    for (i = 0; i < mask.length; i++) {\n      result[i] = addr[addr.length - 4 + i] & mask[i];\n    }\n  } else {\n    // IPv6 mask and IPv4 addr\n    for (var i = 0; i < result.length - 6; i++) {\n      result[i] = 0;\n    } // ::ffff:ipv4\n\n\n    result[10] = 0xff;\n    result[11] = 0xff;\n\n    for (i = 0; i < addr.length; i++) {\n      result[i + 12] = addr[i] & mask[i + 12];\n    }\n\n    i = i + 12;\n  }\n\n  for (; i < result.length; i++) {\n    result[i] = 0;\n  }\n\n  return ip.toString(result);\n};\n\nip.cidr = function (cidrString) {\n  var cidrParts = cidrString.split('/');\n  var addr = cidrParts[0];\n  if (cidrParts.length !== 2) throw new Error('invalid CIDR subnet: ' + addr);\n  var mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n  return ip.mask(addr, mask);\n};\n\nip.subnet = function (addr, mask) {\n  var networkAddress = ip.toLong(ip.mask(addr, mask)); // Calculate the mask's length.\n\n  var maskBuffer = ip.toBuffer(mask);\n  var maskLength = 0;\n\n  for (var i = 0; i < maskBuffer.length; i++) {\n    if (maskBuffer[i] === 0xff) {\n      maskLength += 8;\n    } else {\n      var octet = maskBuffer[i] & 0xff;\n\n      while (octet) {\n        octet = octet << 1 & 0xff;\n        maskLength++;\n      }\n    }\n  }\n\n  var numberOfAddresses = Math.pow(2, 32 - maskLength);\n  return {\n    networkAddress: ip.fromLong(networkAddress),\n    firstAddress: numberOfAddresses <= 2 ? ip.fromLong(networkAddress) : ip.fromLong(networkAddress + 1),\n    lastAddress: numberOfAddresses <= 2 ? ip.fromLong(networkAddress + numberOfAddresses - 1) : ip.fromLong(networkAddress + numberOfAddresses - 2),\n    broadcastAddress: ip.fromLong(networkAddress + numberOfAddresses - 1),\n    subnetMask: mask,\n    subnetMaskLength: maskLength,\n    numHosts: numberOfAddresses <= 2 ? numberOfAddresses : numberOfAddresses - 2,\n    length: numberOfAddresses,\n    contains: function contains(other) {\n      return networkAddress === ip.toLong(ip.mask(other, mask));\n    }\n  };\n};\n\nip.cidrSubnet = function (cidrString) {\n  var cidrParts = cidrString.split('/');\n  var addr = cidrParts[0];\n  if (cidrParts.length !== 2) throw new Error('invalid CIDR subnet: ' + addr);\n  var mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n  return ip.subnet(addr, mask);\n};\n\nip.not = function (addr) {\n  var buff = ip.toBuffer(addr);\n\n  for (var i = 0; i < buff.length; i++) {\n    buff[i] = 0xff ^ buff[i];\n  }\n\n  return ip.toString(buff);\n};\n\nip.or = function (a, b) {\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b); // same protocol\n\n  if (a.length === b.length) {\n    for (var i = 0; i < a.length; ++i) {\n      a[i] |= b[i];\n    }\n\n    return ip.toString(a); // mixed protocols\n  } else {\n    var buff = a;\n    var other = b;\n\n    if (b.length > a.length) {\n      buff = b;\n      other = a;\n    }\n\n    var offset = buff.length - other.length;\n\n    for (var i = offset; i < buff.length; ++i) {\n      buff[i] |= other[i - offset];\n    }\n\n    return ip.toString(buff);\n  }\n};\n\nip.isEqual = function (a, b) {\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b); // Same protocol\n\n  if (a.length === b.length) {\n    for (var i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  } // Swap\n\n\n  if (b.length === 4) {\n    var t = b;\n    b = a;\n    a = t;\n  } // a - IPv4, b - IPv6\n\n\n  for (var i = 0; i < 10; i++) {\n    if (b[i] !== 0) return false;\n  }\n\n  var word = b.readUInt16BE(10);\n  if (word !== 0 && word !== 0xffff) return false;\n\n  for (var i = 0; i < 4; i++) {\n    if (a[i] !== b[i + 12]) return false;\n  }\n\n  return true;\n};\n\nip.isPrivate = function (addr) {\n  return /^(::f{4}:)?10\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) || /^(::f{4}:)?192\\.168\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) || /^(::f{4}:)?172\\.(1[6-9]|2\\d|30|31)\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) || /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) || /^(::f{4}:)?169\\.254\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) || /^f[cd][0-9a-f]{2}:/i.test(addr) || /^fe80:/i.test(addr) || /^::1$/.test(addr) || /^::$/.test(addr);\n};\n\nip.isPublic = function (addr) {\n  return !ip.isPrivate(addr);\n};\n\nip.isLoopback = function (addr) {\n  return /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})/.test(addr) || /^fe80::1$/.test(addr) || /^::1$/.test(addr) || /^::$/.test(addr);\n};\n\nip.loopback = function (family) {\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  if (family !== 'ipv4' && family !== 'ipv6') {\n    throw new Error('family must be ipv4 or ipv6');\n  }\n\n  return family === 'ipv4' ? '127.0.0.1' : 'fe80::1';\n}; //\n// ### function address (name, family)\n// #### @name {string|'public'|'private'} **Optional** Name or security\n//      of the network interface.\n// #### @family {ipv4|ipv6} **Optional** IP family of the address (defaults\n//      to ipv4).\n//\n// Returns the address for the network interface on the current system with\n// the specified `name`:\n//   * String: First `family` address of the interface.\n//             If not found see `undefined`.\n//   * 'public': the first public ip address of family.\n//   * 'private': the first private ip address of family.\n//   * undefined: First address with `ipv4` or loopback address `127.0.0.1`.\n//\n\n\nip.address = function (name, family) {\n  var interfaces = os.networkInterfaces();\n  var all; //\n  // Default to `ipv4`\n  //\n\n  family = _normalizeFamily(family); //\n  // If a specific network interface has been named,\n  // return the address.\n  //\n\n  if (name && name !== 'private' && name !== 'public') {\n    var res = interfaces[name].filter(function (details) {\n      var itemFamily = details.family.toLowerCase();\n      return itemFamily === family;\n    });\n    if (res.length === 0) return undefined;\n    return res[0].address;\n  }\n\n  var all = Object.keys(interfaces).map(function (nic) {\n    //\n    // Note: name will only be `public` or `private`\n    // when this is called.\n    //\n    var addresses = interfaces[nic].filter(function (details) {\n      details.family = details.family.toLowerCase();\n\n      if (details.family !== family || ip.isLoopback(details.address)) {\n        return false;\n      } else if (!name) {\n        return true;\n      }\n\n      return name === 'public' ? ip.isPrivate(details.address) : ip.isPublic(details.address);\n    });\n    return addresses.length ? addresses[0].address : undefined;\n  }).filter(Boolean);\n  return !all.length ? ip.loopback(family) : all[0];\n};\n\nip.toLong = function (ip) {\n  var ipl = 0;\n  ip.split('.').forEach(function (octet) {\n    ipl <<= 8;\n    ipl += parseInt(octet);\n  });\n  return ipl >>> 0;\n};\n\nip.fromLong = function (ipl) {\n  return (ipl >>> 24) + '.' + (ipl >> 16 & 255) + '.' + (ipl >> 8 & 255) + '.' + (ipl & 255);\n};","\"use strict\";\n\nexports.endianness = function () {\n  return 'LE';\n};\n\nexports.hostname = function () {\n  if (typeof location !== 'undefined') {\n    return location.hostname;\n  } else return '';\n};\n\nexports.loadavg = function () {\n  return [];\n};\n\nexports.uptime = function () {\n  return 0;\n};\n\nexports.freemem = function () {\n  return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n  return Number.MAX_VALUE;\n};\n\nexports.cpus = function () {\n  return [];\n};\n\nexports.type = function () {\n  return 'Browser';\n};\n\nexports.release = function () {\n  if (typeof navigator !== 'undefined') {\n    return navigator.appVersion;\n  }\n\n  return '';\n};\n\nexports.networkInterfaces = exports.getNetworkInterfaces = function () {\n  return {};\n};\n\nexports.arch = function () {\n  return 'javascript';\n};\n\nexports.platform = function () {\n  return 'browser';\n};\n\nexports.tmpdir = exports.tmpDir = function () {\n  return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n  return '/';\n};","'use strict';\n\nvar ipRegex = require('ip-regex');\n\nvar isIp = module.exports = function (x) {\n  return ipRegex({\n    exact: true\n  }).test(x);\n};\n\nisIp.v4 = function (x) {\n  return ipRegex.v4({\n    exact: true\n  }).test(x);\n};\n\nisIp.v6 = function (x) {\n  return ipRegex.v6({\n    exact: true\n  }).test(x);\n};","'use strict';\n\nvar v4 = '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}';\nvar v6seg = '[0-9a-fA-F]{1,4}';\nvar v6 = \"\\n(\\n(?:\".concat(v6seg, \":){7}(?:\").concat(v6seg, \"|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\\n(?:\").concat(v6seg, \":){6}(?:\").concat(v4, \"|:\").concat(v6seg, \"|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\\n(?:\").concat(v6seg, \":){5}(?::\").concat(v4, \"|(:\").concat(v6seg, \"){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\\n(?:\").concat(v6seg, \":){4}(?:(:\").concat(v6seg, \"){0,1}:\").concat(v4, \"|(:\").concat(v6seg, \"){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\\n(?:\").concat(v6seg, \":){3}(?:(:\").concat(v6seg, \"){0,2}:\").concat(v4, \"|(:\").concat(v6seg, \"){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\\n(?:\").concat(v6seg, \":){2}(?:(:\").concat(v6seg, \"){0,3}:\").concat(v4, \"|(:\").concat(v6seg, \"){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\\n(?:\").concat(v6seg, \":){1}(?:(:\").concat(v6seg, \"){0,4}:\").concat(v4, \"|(:\").concat(v6seg, \"){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\\n(?::((?::\").concat(v6seg, \"){0,5}:\").concat(v4, \"|(?::\").concat(v6seg, \"){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\\n)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1\\n\").replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\nvar ip = module.exports = function (opts) {\n  return opts && opts.exact ? new RegExp(\"(?:^\".concat(v4, \"$)|(?:^\").concat(v6, \"$)\")) : new RegExp(\"(?:\".concat(v4, \")|(?:\").concat(v6, \")\"), 'g');\n};\n\nip.v4 = function (opts) {\n  return opts && opts.exact ? new RegExp(\"^\".concat(v4, \"$\")) : new RegExp(v4, 'g');\n};\n\nip.v6 = function (opts) {\n  return opts && opts.exact ? new RegExp(\"^\".concat(v6, \"$\")) : new RegExp(v6, 'g');\n};","\"use strict\";\n\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nvar Buffer = require('safe-buffer').Buffer;\n\nmodule.exports = function base(ALPHABET) {\n  if (ALPHABET.length >= 255) throw new TypeError('Alphabet too long');\n  var BASE_MAP = new Uint8Array(256);\n  BASE_MAP.fill(255);\n\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) throw new TypeError(x + ' is ambiguous');\n    BASE_MAP[xc] = i;\n  }\n\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n\n  function encode(source) {\n    if (!Buffer.isBuffer(source)) throw new TypeError('Expected Buffer');\n    if (source.length === 0) return ''; // Skip & count leading zeroes.\n\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    } // Allocate enough space in big-endian base58 representation.\n\n\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size); // Process the bytes.\n\n    while (pbegin !== pend) {\n      var carry = source[pbegin]; // Apply \"b58 = b58 * 256 + ch\".\n\n      var _i = 0;\n\n      for (var _it = size - 1; (carry !== 0 || _i < length) && _it !== -1; _it--, _i++) {\n        carry += 256 * b58[_it] >>> 0;\n        b58[_it] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n\n      if (carry !== 0) throw new Error('Non-zero carry');\n      length = _i;\n      pbegin++;\n    } // Skip leading zeroes in base58 result.\n\n\n    var it = size - length;\n\n    while (it !== size && b58[it] === 0) {\n      it++;\n    } // Translate the result into a string.\n\n\n    var str = LEADER.repeat(zeroes);\n\n    for (; it < size; ++it) {\n      str += ALPHABET.charAt(b58[it]);\n    }\n\n    return str;\n  }\n\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') throw new TypeError('Expected String');\n    if (source.length === 0) return Buffer.alloc(0);\n    var psz = 0; // Skip leading spaces.\n\n    if (source[psz] === ' ') return; // Skip and count leading '1's.\n\n    var zeroes = 0;\n    var length = 0;\n\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    } // Allocate enough space in big-endian base256 representation.\n\n\n    var size = (source.length - psz) * FACTOR + 1 >>> 0; // log(58) / log(256), rounded up.\n\n    var b256 = new Uint8Array(size); // Process the characters.\n\n    while (source[psz]) {\n      // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]; // Invalid character\n\n      if (carry === 255) return;\n      var _i2 = 0;\n\n      for (var _it2 = size - 1; (carry !== 0 || _i2 < length) && _it2 !== -1; _it2--, _i2++) {\n        carry += BASE * b256[_it2] >>> 0;\n        b256[_it2] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n\n      if (carry !== 0) throw new Error('Non-zero carry');\n      length = _i2;\n      psz++;\n    } // Skip trailing spaces.\n\n\n    if (source[psz] === ' ') return; // Skip leading zeroes in b256.\n\n    var it = size - length;\n\n    while (it !== size && b256[it] === 0) {\n      it++;\n    }\n\n    var vch = Buffer.allocUnsafe(zeroes + (size - it));\n    vch.fill(0x00, 0, zeroes);\n    var j = zeroes;\n\n    while (it !== size) {\n      vch[j++] = b256[it++];\n    }\n\n    return vch;\n  }\n\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) return buffer;\n    throw new Error('Non-base' + BASE + ' character');\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n};","\"use strict\";\n\nmodule.exports = encode;\nvar MSB = 0x80,\n    REST = 0x7F,\n    MSBALL = ~REST,\n    INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while (num >= INT) {\n    out[offset++] = num & 0xFF | MSB;\n    num /= 128;\n  }\n\n  while (num & MSBALL) {\n    out[offset++] = num & 0xFF | MSB;\n    num >>>= 7;\n  }\n\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}","\"use strict\";\n\nmodule.exports = read;\nvar MSB = 0x80,\n    REST = 0x7F;\n\nfunction read(buf, offset) {\n  var res = 0,\n      offset = offset || 0,\n      shift = 0,\n      counter = offset,\n      b,\n      l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST) << shift : (b & REST) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB);\n\n  read.bytes = counter - offset;\n  return res;\n}","\"use strict\";\n\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nmodule.exports = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};","'use strict';\n\nexports.Connection = require('./connection');","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar defer = require('pull-defer/duplex');\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function Connection(conn, info) {\n    _classCallCheck(this, Connection);\n\n    this.peerInfo = null;\n    this.conn = defer();\n\n    if (conn) {\n      this.setInnerConn(conn, info);\n    } else if (info) {\n      this.info = info;\n    }\n  }\n\n  _createClass(Connection, [{\n    key: \"getPeerInfo\",\n    value: function getPeerInfo(callback) {\n      if (this.info && this.info.getPeerInfo) {\n        return this.info.getPeerInfo(callback);\n      }\n\n      if (!this.peerInfo) {\n        return callback(new Error('Peer Info not set yet'));\n      }\n\n      callback(null, this.peerInfo);\n    }\n  }, {\n    key: \"setPeerInfo\",\n    value: function setPeerInfo(peerInfo) {\n      if (this.info && this.info.setPeerInfo) {\n        return this.info.setPeerInfo(peerInfo);\n      }\n\n      this.peerInfo = peerInfo;\n    }\n  }, {\n    key: \"getObservedAddrs\",\n    value: function getObservedAddrs(callback) {\n      if (this.info && this.info.getObservedAddrs) {\n        return this.info.getObservedAddrs(callback);\n      }\n\n      callback(null, []);\n    }\n  }, {\n    key: \"setInnerConn\",\n    value: function setInnerConn(conn, info) {\n      this.conn.resolve(conn);\n\n      if (info) {\n        this.info = info;\n      } else {\n        this.info = conn;\n      }\n    }\n  }, {\n    key: \"source\",\n    get: function get() {\n      return this.conn.source;\n    }\n  }, {\n    key: \"sink\",\n    get: function get() {\n      return this.conn.sink;\n    }\n  }]);\n\n  return Connection;\n}();","\"use strict\";\n\nvar Source = require('./source');\n\nvar Sink = require('./sink');\n\nmodule.exports = function () {\n  var source = Source();\n  var sink = Sink();\n  return {\n    source: source,\n    sink: sink,\n    resolve: function resolve(duplex) {\n      source.resolve(duplex.source);\n      sink.resolve(duplex.sink);\n    }\n  };\n};","\"use strict\";\n\nmodule.exports = function () {\n  var _read, _cb, abortCb, _end;\n\n  var read = function read(end, cb) {\n    if (!_read) {\n      if (end) {\n        _end = end;\n        abortCb = cb;\n      } else _cb = cb;\n    } else _read(end, cb);\n  };\n\n  read.resolve = function (read) {\n    if (_read) throw new Error('already resolved');\n    _read = read;\n    if (!_read) throw new Error('no read cannot resolve!' + _read);\n    if (_cb) read(null, _cb);\n    if (abortCb) read(_end, abortCb);\n  };\n\n  read.abort = function (err) {\n    read.resolve(function (_, cb) {\n      cb(err || true);\n    });\n  };\n\n  return read;\n};","\"use strict\";\n\nmodule.exports = function (stream) {\n  var read,\n      started = false;\n\n  function consume(_read) {\n    if (!_read) throw new Error('must be passed a readable');\n    read = _read;\n    if (started) stream(read);\n  }\n\n  consume.resolve = consume.ready = consume.start = function (_stream) {\n    started = true;\n    stream = _stream || stream;\n    if (read) stream(read);\n    return consume;\n  };\n\n  return consume;\n};","\"use strict\";\n\nvar Multiaddr = require('multiaddr');\n\nvar reduceValue = function reduceValue(_, v) {\n  return v;\n};\n\nvar Reducers = {\n  ip4: reduceValue,\n  ip6: function ip6(str, content, i, parts) {\n    return parts.length === 1 && parts[0].protocol === 'ip6' ? content : \"[\".concat(content, \"]\");\n  },\n  tcp: function tcp(str, content, i, parts) {\n    return parts.some(function (p) {\n      return ['http', 'https', 'ws', 'wss'].includes(p.protocol);\n    }) ? \"\".concat(str, \":\").concat(content) : \"tcp://\".concat(str, \":\").concat(content);\n  },\n  udp: function udp(str, content) {\n    return \"udp://\".concat(str, \":\").concat(content);\n  },\n  dnsaddr: reduceValue,\n  dns4: reduceValue,\n  dns6: reduceValue,\n  ipfs: function ipfs(str, content) {\n    return \"\".concat(str, \"/ipfs/\").concat(content);\n  },\n  p2p: function p2p(str, content) {\n    return \"\".concat(str, \"/p2p/\").concat(content);\n  },\n  http: function http(str) {\n    return \"http://\".concat(str);\n  },\n  https: function https(str) {\n    return \"https://\".concat(str);\n  },\n  ws: function ws(str) {\n    return \"ws://\".concat(str);\n  },\n  wss: function wss(str) {\n    return \"wss://\".concat(str);\n  },\n  'p2p-websocket-star': function p2pWebsocketStar(str) {\n    return \"\".concat(str, \"/p2p-websocket-star\");\n  },\n  'p2p-webrtc-star': function p2pWebrtcStar(str) {\n    return \"\".concat(str, \"/p2p-webrtc-star\");\n  },\n  'p2p-webrtc-direct': function p2pWebrtcDirect(str) {\n    return \"\".concat(str, \"/p2p-webrtc-direct\");\n  }\n};\n\nmodule.exports = function (multiaddr) {\n  return Multiaddr(multiaddr).stringTuples().map(function (tuple) {\n    return {\n      protocol: Multiaddr.protocols.codes[tuple[0]].name,\n      content: tuple[1]\n    };\n  }).reduce(function (str, part, i, parts) {\n    var reduce = Reducers[part.protocol];\n    if (!reduce) throw new Error(\"Unsupported protocol \".concat(part.protocol));\n    return reduce(str, part.content, i, parts);\n  }, '');\n};","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};","\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n    newDebug.log = this.log;\n    return newDebug;\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @return {String} namespaces\n  * @api public\n  */\n\n\n  function disable() {\n    var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {\n      return '-' + namespace;\n    }))).join(',');\n    createDebug.enable('');\n    return namespaces;\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Convert regexp to namespace\n  *\n  * @param {RegExp} regxep\n  * @return {String} namespace\n  * @api private\n  */\n\n\n  function toNamespace(regexp) {\n    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, '*');\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n\n  var type = _typeof(val);\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n\n  return ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}","'use strict'\n\nmodule.exports = function () {\n  throw new Error('WebSocket Servers can not be created in the browser!')\n}\n"],"sourceRoot":""}